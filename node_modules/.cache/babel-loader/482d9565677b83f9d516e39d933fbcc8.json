{"ast":null,"code":"'use strict';\n\nconst fs = require('../fs');\n\nconst {\n  checkPath\n} = require('./utils');\n\nconst getMode = options => {\n  const defaults = {\n    mode: 0o777\n  };\n  if (typeof options === 'number') return options;\n  return { ...defaults,\n    ...options\n  }.mode;\n};\n\nmodule.exports.makeDir = async (dir, options) => {\n  checkPath(dir);\n  return fs.mkdir(dir, {\n    mode: getMode(options),\n    recursive: true\n  });\n};\n\nmodule.exports.makeDirSync = (dir, options) => {\n  checkPath(dir);\n  return fs.mkdirSync(dir, {\n    mode: getMode(options),\n    recursive: true\n  });\n};","map":{"version":3,"sources":["/home/carlos/Documents/Software3/FrontendProyectoSoftware3/node_modules/fs-extra/lib/mkdirs/make-dir.js"],"names":["fs","require","checkPath","getMode","options","defaults","mode","module","exports","makeDir","dir","mkdir","recursive","makeDirSync","mkdirSync"],"mappings":"AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,OAAD,CAAlB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,OAAO,CAAC,SAAD,CAA7B;;AAEA,MAAME,OAAO,GAAGC,OAAO,IAAI;AACzB,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAjB;AACA,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC,OAAOA,OAAP;AACjC,SAAQ,EAAE,GAAGC,QAAL;AAAe,OAAGD;AAAlB,GAAD,CAA8BE,IAArC;AACD,CAJD;;AAMAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,OAAOC,GAAP,EAAYN,OAAZ,KAAwB;AAC/CF,EAAAA,SAAS,CAACQ,GAAD,CAAT;AAEA,SAAOV,EAAE,CAACW,KAAH,CAASD,GAAT,EAAc;AACnBJ,IAAAA,IAAI,EAAEH,OAAO,CAACC,OAAD,CADM;AAEnBQ,IAAAA,SAAS,EAAE;AAFQ,GAAd,CAAP;AAID,CAPD;;AASAL,MAAM,CAACC,OAAP,CAAeK,WAAf,GAA6B,CAACH,GAAD,EAAMN,OAAN,KAAkB;AAC7CF,EAAAA,SAAS,CAACQ,GAAD,CAAT;AAEA,SAAOV,EAAE,CAACc,SAAH,CAAaJ,GAAb,EAAkB;AACvBJ,IAAAA,IAAI,EAAEH,OAAO,CAACC,OAAD,CADU;AAEvBQ,IAAAA,SAAS,EAAE;AAFY,GAAlB,CAAP;AAID,CAPD","sourcesContent":["'use strict'\nconst fs = require('../fs')\nconst { checkPath } = require('./utils')\n\nconst getMode = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') return options\n  return ({ ...defaults, ...options }).mode\n}\n\nmodule.exports.makeDir = async (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdir(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n\nmodule.exports.makeDirSync = (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdirSync(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n"]},"metadata":{},"sourceType":"script"}