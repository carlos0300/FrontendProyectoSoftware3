{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromPromise;\n\nconst fs = require('../fs');\n\nconst path = require('path');\n\nconst mkdir = require('../mkdirs');\n\nconst remove = require('../remove');\n\nconst emptyDir = u(async function emptyDir(dir) {\n  let items;\n\n  try {\n    items = await fs.readdir(dir);\n  } catch {\n    return mkdir.mkdirs(dir);\n  }\n\n  return Promise.all(items.map(item => remove.remove(path.join(dir, item))));\n});\n\nfunction emptyDirSync(dir) {\n  let items;\n\n  try {\n    items = fs.readdirSync(dir);\n  } catch {\n    return mkdir.mkdirsSync(dir);\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item);\n    remove.removeSync(item);\n  });\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n};","map":{"version":3,"sources":["/home/carlos/Documents/Software3/FrontendProyectoSoftware3/node_modules/fs-extra/lib/empty/index.js"],"names":["u","require","fromPromise","fs","path","mkdir","remove","emptyDir","dir","items","readdir","mkdirs","Promise","all","map","item","join","emptyDirSync","readdirSync","mkdirsSync","forEach","removeSync","module","exports","emptydirSync","emptydir"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,WAAlC;;AACA,MAAMC,EAAE,GAAGF,OAAO,CAAC,OAAD,CAAlB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMM,QAAQ,GAAGP,CAAC,CAAC,eAAeO,QAAf,CAAyBC,GAAzB,EAA8B;AAC/C,MAAIC,KAAJ;;AACA,MAAI;AACFA,IAAAA,KAAK,GAAG,MAAMN,EAAE,CAACO,OAAH,CAAWF,GAAX,CAAd;AACD,GAFD,CAEE,MAAM;AACN,WAAOH,KAAK,CAACM,MAAN,CAAaH,GAAb,CAAP;AACD;;AAED,SAAOI,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAIT,MAAM,CAACA,MAAP,CAAcF,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAd,CAAlB,CAAZ,CAAP;AACD,CATiB,CAAlB;;AAWA,SAASE,YAAT,CAAuBT,GAAvB,EAA4B;AAC1B,MAAIC,KAAJ;;AACA,MAAI;AACFA,IAAAA,KAAK,GAAGN,EAAE,CAACe,WAAH,CAAeV,GAAf,CAAR;AACD,GAFD,CAEE,MAAM;AACN,WAAOH,KAAK,CAACc,UAAN,CAAiBX,GAAjB,CAAP;AACD;;AAEDC,EAAAA,KAAK,CAACW,OAAN,CAAcL,IAAI,IAAI;AACpBA,IAAAA,IAAI,GAAGX,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAP;AACAT,IAAAA,MAAM,CAACe,UAAP,CAAkBN,IAAlB;AACD,GAHD;AAID;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,YADe;AAEfO,EAAAA,YAAY,EAAEP,YAFC;AAGfV,EAAAA,QAHe;AAIfkB,EAAAA,QAAQ,EAAElB;AAJK,CAAjB","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(async function emptyDir (dir) {\n  let items\n  try {\n    items = await fs.readdir(dir)\n  } catch {\n    return mkdir.mkdirs(dir)\n  }\n\n  return Promise.all(items.map(item => remove.remove(path.join(dir, item))))\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n"]},"metadata":{},"sourceType":"script"}